steps:
  - id: pull-last-cms
    name: gcr.io/cloud-builders/docker
    entrypoint: sh
    args:
      - '-c'
      - |
        docker pull $_IMAGE_CMS_REPO:$_ENV-latest || exit 0

  - id: build-cms
    name: gcr.io/cloud-builders/docker
    args:
      - 'build'
      - '--build-arg'
      - 'IMAGE_BASE=$_IMAGE_BASE_REPO:$_ENV-latest'
      - '--compress'
      - '-t'
      - '$_IMAGE_CMS_REPO:${TAG_NAME}'
      - '-t'
      - '$_IMAGE_CMS_REPO:$_ENV-latest'
      - '-f'
      - 'code/Dockerfile'
      - '--cache-from'
      - '$_IMAGE_CMS_REPO:$_ENV-latest'
      - 'code/.'
    waitFor: ['pull-last-cms']

  - id: push-cms
    name: gcr.io/cloud-builders/docker
    args:
      - 'push'
      - '$_IMAGE_CMS_REPO:${TAG_NAME}'
    waitFor: ['build-cms']

  - id: deploy-cms
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - "-c"
      - |
        echo "Updating cloud run with new image"
        gcloud run deploy $_CLOUD_RUN_SERVICE_NAME --image ${_IMAGE_CMS_REPO}:${TAG_NAME} --region $_REGION_NAME --platform managed --project $_PROJECT_ID
    waitFor: ['push-cms']
timeout: 1200s
